package cn.xiaozhou233.juicetools.gui;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class ControlPanel {
    public JPanel panel1;
    public JLabel Title;
    public JTabbedPane tables;
    public JButton refreshButton;
    public JButton dumpClassButton;
    public JTextField fileField;
    public JButton chooseButton_file;
    public JTextField classField;
    public JButton chooseButton_class;
    public JButton redefineButton;
    public JTextField outputTextField;
    public JPanel dump_buttons;
    public JPanel dump_panel;
    public JPanel redefine_panel;
    public JLabel titleFile;
    public JLabel titleClass;
    public JLabel titleLength;
    public JLabel legthText;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        Title = new JLabel();
        Font TitleFont = this.$$$getFont$$$("Consolas", -1, 24, Title.getFont());
        if (TitleFont != null) Title.setFont(TitleFont);
        Title.setHorizontalAlignment(0);
        Title.setText("JuiceTools ControlPanel");
        panel1.add(Title, BorderLayout.NORTH);
        tables = new JTabbedPane();
        panel1.add(tables, BorderLayout.CENTER);
        dump_panel = new JPanel();
        dump_panel.setLayout(new BorderLayout(0, 0));
        tables.addTab("Dump", dump_panel);
        dump_buttons = new JPanel();
        dump_buttons.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        dump_panel.add(dump_buttons, BorderLayout.NORTH);
        refreshButton = new JButton();
        refreshButton.setText("Refresh");
        dump_buttons.add(refreshButton);
        dumpClassButton = new JButton();
        dumpClassButton.setText("Dump Class");
        dump_buttons.add(dumpClassButton);
        redefine_panel = new JPanel();
        redefine_panel.setLayout(new GridBagLayout());
        tables.addTab("Redefine", redefine_panel);
        fileField = new JTextField();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 3.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        redefine_panel.add(fileField, gbc);
        chooseButton_file = new JButton();
        chooseButton_file.setText("Choose");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        redefine_panel.add(chooseButton_file, gbc);
        titleFile = new JLabel();
        titleFile.setText("File");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        redefine_panel.add(titleFile, gbc);
        titleClass = new JLabel();
        titleClass.setText("Class");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        redefine_panel.add(titleClass, gbc);
        classField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        redefine_panel.add(classField, gbc);
        chooseButton_class = new JButton();
        chooseButton_class.setText("Choose");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        redefine_panel.add(chooseButton_class, gbc);
        titleLength = new JLabel();
        titleLength.setText("Length");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        redefine_panel.add(titleLength, gbc);
        legthText = new JLabel();
        legthText.setText("0 Bytes");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.NORTH;
        redefine_panel.add(legthText, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        redefine_panel.add(spacer1, gbc);
        redefineButton = new JButton();
        redefineButton.setText("Redefine");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        redefine_panel.add(redefineButton, gbc);
        outputTextField = new JTextField();
        outputTextField.setText("Output");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        redefine_panel.add(outputTextField, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
