package cn.xiaozhou233.juicetools.gui;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class Bootstrap {
    public JPanel panel1;
    public JLabel Title;
    public JTextArea info;
    public JProgressBar progressBar1;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setPreferredSize(new Dimension(500, 200));
        Title = new JLabel();
        Title.setAlignmentX(1.0f);
        Title.setAutoscrolls(false);
        Title.setEnabled(true);
        Font TitleFont = this.$$$getFont$$$("Consolas", Font.BOLD, 36, Title.getFont());
        if (TitleFont != null) Title.setFont(TitleFont);
        Title.setHorizontalAlignment(0);
        Title.setHorizontalTextPosition(0);
        Title.setText("JuiceTools GUI");
        Title.setVerticalTextPosition(0);
        panel1.add(Title, BorderLayout.NORTH);
        progressBar1 = new JProgressBar();
        progressBar1.setBorderPainted(true);
        progressBar1.setEnabled(true);
        progressBar1.setIndeterminate(true);
        progressBar1.setOrientation(0);
        progressBar1.setStringPainted(false);
        panel1.add(progressBar1, BorderLayout.SOUTH);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, BorderLayout.CENTER);
        info = new JTextArea();
        Font infoFont = this.$$$getFont$$$("Consolas", -1, 16, info.getFont());
        if (infoFont != null) info.setFont(infoFont);
        scrollPane1.setViewportView(info);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
